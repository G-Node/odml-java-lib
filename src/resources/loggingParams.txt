# root logger to ERROR, i.e. if level not further specified, only ERROR output printing
<<<<<<< .mine
log4j.rootLogger=INFO, stdout, W, R
log4j.logger.odml.core.Reader=WARN
log4j.logger.odml.core.Writer=WARN
log4j.logger.odml.core.Section=WARN
log4j.logger.odml.core.Property=WARN
=======
log4j.rootLogger=ERROR, stdout, W, R
log4j.logger.odml.core.Reader=ERROR
log4j.logger.odml.core.Writer=ERROR
log4j.logger.odml.core.Section=ERROR
log4j.logger.odml.core.Property=ERROR
>>>>>>> .r163


# one appender (stdout) for console printing
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%-5p [%t] (%F:%L) - %m%n


# another appender (W) for writing in file, every "run" cmd = writing file new
log4j.appender.W=org.apache.log4j.FileAppender
log4j.appender.W.File=log/oneRun.log
log4j.appender.W.append=false
log4j.appender.W.layout=org.apache.log4j.PatternLayout
log4j.appender.W.layout.ConversionPattern=%d  %-6p [%t] %15.35c - %m%n


# another appender (R) for writing in one file, when kB exceeded, new file
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=log/allCalls.log
log4j.appender.R.MaxFileSize=100KB
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%d  %-6p [%t] %15.35c - %m%n

